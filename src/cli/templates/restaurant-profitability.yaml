name: Restaurant Profitability Analysis
category: Business Operations
description: Comprehensive restaurant financial analysis with industry KPIs, seasonal modeling, and ARR-based investment planning for hospitality ventures
version: 2.0.0
tags: [restaurant, hospitality, profitability, operations, investment-planning]

parameters:
  - key: annualRecurringRevenue
    label: Company ARR
    type: number
    default: 5000000
    min: 500000
    max: 100000000
    step: 100000
    description: "Company's annual recurring revenue for restaurant investment budgeting"
    
  - key: restaurantInvestmentPercent
    label: "Restaurant Investment (% of ARR)"
    type: number
    default: 8
    min: 2
    max: 20
    step: 0.5
    description: "Restaurant investment as percentage of company ARR (typical: 5-15%)"
    
  - key: seatingCapacity
    label: Seating Capacity
    type: number
    default: 120
    min: 30
    max: 400
    step: 10
    description: Maximum dining room capacity (industry standard: 80-200 seats)

  - key: averageTicket
    label: Average Ticket Size ($)
    type: number
    default: 65.00
    min: 15.00
    max: 300.00
    step: 5.00
    description: Average customer spend per visit (fast-casual: $15-25, casual: $45-85, fine: $100-300)

  - key: cuisineType
    label: Restaurant Category
    type: select
    default: casual-dining
    options: [fast-casual, casual-dining, fine-dining, ethnic-specialty, quick-service]
    description: Restaurant category affecting pricing, turnover, and operational complexity

  - key: locationTier
    label: Location Quality
    type: select
    default: prime-suburban
    options: [neighborhood, strip-mall, downtown, prime-suburban, tourist-district]
    description: Location quality impacts foot traffic, rent, and customer demographics

  - key: staffingModel
    label: Staffing Approach
    type: select
    default: full-service
    options: [counter-service, limited-service, full-service, fine-dining-service]
    description: Service model affecting labor costs and customer experience

  - key: marketingStrategy
    label: Marketing Focus
    type: select
    default: balanced
    options: [digital-only, traditional-local, balanced, premium-brand]
    description: Marketing strategy affecting customer acquisition costs and brand positioning

groups:
  - name: Investment & Scale
    description: ARR-based investment planning and restaurant size
    parameters: [annualRecurringRevenue, restaurantInvestmentPercent, seatingCapacity]
    
  - name: Business Model
    description: Restaurant positioning, service model, and pricing strategy
    parameters: [averageTicket, cuisineType, staffingModel]
    
  - name: Market Position
    description: Location strategy and marketing approach
    parameters: [locationTier, marketingStrategy]

outputs:
  - key: monthlyRevenue
    label: Monthly Revenue ($)
    description: Gross monthly revenue from all sources

  - key: monthlyNetProfit
    label: Monthly Net Profit ($)
    description: Monthly profit after all operating expenses

  - key: breakEvenMonths
    label: Break-even Timeline (months)
    description: Time to recover initial investment

  - key: annualROI
    label: First Year ROI (%)
    description: Return on investment for year one operations

  - key: revenuePerSeat
    label: Revenue per Seat/Month ($)
    description: Monthly revenue efficiency per available seat

  - key: foodCostPercent
    label: Food Cost (% of Revenue)
    description: Food and beverage costs as percentage of revenue

  - key: laborCostPercent
    label: Labor Cost (% of Revenue)
    description: Total labor costs as percentage of revenue

  - key: customerAcquisitionCost
    label: Customer Acquisition Cost ($)
    description: Marketing cost per new customer acquired

simulation:
  logic: |
    // ARR-based investment calculation
    const totalInvestmentBudget = annualRecurringRevenue * (restaurantInvestmentPercent / 100)
    const startupCosts = totalInvestmentBudget * 0.75  // 75% for startup
    const annualOperatingBudget = totalInvestmentBudget * 0.25  // 25% for annual operations
    const monthlyOperatingBudget = annualOperatingBudget / 12
    
    // Location quality impact on traffic and costs
    const locationFactors = {
      'neighborhood': { traffic: 0.7, rentMultiplier: 0.6, customerQuality: 0.8 },
      'strip-mall': { traffic: 0.8, rentMultiplier: 0.7, customerQuality: 0.9 },
      'downtown': { traffic: 1.1, rentMultiplier: 1.3, customerQuality: 1.0 },
      'prime-suburban': { traffic: 1.0, rentMultiplier: 1.0, customerQuality: 1.1 },
      'tourist-district': { traffic: 1.4, rentMultiplier: 1.8, customerQuality: 0.9 }
    }
    
    // Cuisine category operational parameters
    const cuisineParameters = {
      'quick-service': { turnover: 4.0, ticketVariation: 0.7, laborIntensity: 0.6 },
      'fast-casual': { turnover: 3.5, ticketVariation: 0.8, laborIntensity: 0.7 },
      'casual-dining': { turnover: 2.5, ticketVariation: 1.0, laborIntensity: 1.0 },
      'fine-dining': { turnover: 1.8, ticketVariation: 1.4, laborIntensity: 1.3 },
      'ethnic-specialty': { turnover: 2.2, ticketVariation: 1.1, laborIntensity: 1.1 }
    }
    
    // Staffing model costs
    const staffingCosts = {
      'counter-service': { hourlyWage: 16.50, staffPerSeat: 0.08 },
      'limited-service': { hourlyWage: 18.00, staffPerSeat: 0.10 },
      'full-service': { hourlyWage: 22.50, staffPerSeat: 0.15 },
      'fine-dining-service': { hourlyWage: 28.00, staffPerSeat: 0.20 }
    }
    
    // Marketing strategy impact
    const marketingEfficiency = {
      'digital-only': { costPer1000Reach: 8.0, conversionRate: 0.012 },
      'traditional-local': { costPer1000Reach: 15.0, conversionRate: 0.018 },
      'balanced': { costPer1000Reach: 12.0, conversionRate: 0.015 },
      'premium-brand': { costPer1000Reach: 25.0, conversionRate: 0.008 }
    }
    
    // Extract factors
    const location = locationFactors[locationTier]
    const cuisine = cuisineParameters[cuisineType]
    const staffing = staffingCosts[staffingModel]
    const marketing = marketingEfficiency[marketingStrategy]
    
    // Calculate base rent (8-12% of operating budget based on location)
    const rentPercent = 0.08 + (location.rentMultiplier - 0.6) * 0.04
    const monthlyRent = monthlyOperatingBudget * rentPercent
    
    // Calculate staffing
    const totalStaff = Math.ceil(seatingCapacity * staffing.staffPerSeat)
    const monthlyLaborCosts = totalStaff * staffing.hourlyWage * 40 * 4.33
    
    // Revenue modeling with seasonal and operational variation
    const seasonalVariation = 1.0 + (random() - 0.5) * 0.3  // Â±15% seasonal impact
    const baseUtilization = 0.45 + random() * 0.25  // 45-70% seat utilization
    const actualTurnover = cuisine.turnover * (0.85 + random() * 0.30) * seasonalVariation
    
    // Daily customer calculation
    const dailyCapacity = seatingCapacity * baseUtilization * location.traffic * actualTurnover
    const actualTicket = averageTicket * cuisine.ticketVariation * location.customerQuality * (0.90 + random() * 0.20)
    
    // Monthly revenue
    const monthlyRevenue = dailyCapacity * actualTicket * 30
    
    // Operating costs calculation
    const targetFoodCostPercent = 0.29 + random() * 0.08  // 29-37% industry range
    const foodCosts = monthlyRevenue * targetFoodCostPercent
    
    // Marketing spend based on strategy and revenue
    const marketingBudget = monthlyOperatingBudget * 0.15  // 15% of operating budget
    const customerReachCost = marketing.costPer1000Reach
    const customersReached = (marketingBudget / customerReachCost) * 1000
    const newCustomersAcquired = customersReached * marketing.conversionRate
    const customerAcquisitionCost = newCustomersAcquired > 0 ? marketingBudget / newCustomersAcquired : 0
    
    // Additional operating expenses
    const utilitiesAndInsurance = 4200 + random() * 2000
    const maintenanceRepairs = monthlyRevenue * 0.02  // 2% of revenue
    const administrativeExpenses = 2800 + random() * 1200
    
    const totalMonthlyOperatingCosts = monthlyRent + monthlyLaborCosts + foodCosts + 
                                     marketingBudget + utilitiesAndInsurance + 
                                     maintenanceRepairs + administrativeExpenses
    
    // Profitability calculations
    const monthlyNetProfit = monthlyRevenue - totalMonthlyOperatingCosts
    const breakEvenMonths = monthlyNetProfit > 0 ? startupCosts / monthlyNetProfit : 999
    const annualNetProfit = monthlyNetProfit * 12
    const annualROI = startupCosts > 0 ? (annualNetProfit / startupCosts) * 100 : 0
    
    // Industry KPIs
    const revenuePerSeat = seatingCapacity > 0 ? monthlyRevenue / seatingCapacity : 0
    const foodCostPercent = monthlyRevenue > 0 ? (foodCosts / monthlyRevenue) * 100 : 0
    const laborCostPercent = monthlyRevenue > 0 ? (monthlyLaborCosts / monthlyRevenue) * 100 : 0
    
    return {
      monthlyRevenue: round(monthlyRevenue),
      monthlyNetProfit: round(monthlyNetProfit),
      breakEvenMonths: Math.min(round(breakEvenMonths * 10) / 10, 999),
      annualROI: round(annualROI * 10) / 10,
      revenuePerSeat: round(revenuePerSeat),
      foodCostPercent: round(foodCostPercent * 10) / 10,
      laborCostPercent: round(laborCostPercent * 10) / 10,
      customerAcquisitionCost: round(customerAcquisitionCost * 100) / 100
    }