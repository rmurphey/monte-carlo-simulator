name: New Product Launch Analysis
category: Business
description: Analysis of new product launch with automatic ARR-based budgeting
version: 1.0.0
tags: [product, launch, business-intelligence, arr-based]

parameters:
  - key: developmentTimeMonths
    label: Development Time (Months)
    type: number
    default: 12
    min: 3
    max: 36
    step: 1
    description: Time required for product development

  - key: marketingIntensity
    label: Marketing Intensity (% of Marketing Budget)
    type: number
    default: 25
    min: 10
    max: 50
    step: 5
    description: Percentage of total marketing budget allocated to this product

  - key: expectedAdoption
    label: Expected Market Adoption (%)
    type: number
    default: 15
    min: 5
    max: 40
    step: 1
    description: Expected market adoption rate percentage

outputs:
  - key: totalDevelopmentCost
    label: Total Development Cost
    description: Total cost for product development

  - key: marketingSpend
    label: Marketing Spend
    description: Total marketing budget for product launch

  - key: breakEvenRevenue
    label: Break-even Revenue
    description: Revenue needed to break even on investment

  - key: projectedROI
    label: Projected ROI (%)
    description: Expected return on investment percentage

simulation:
  logic: |
    // ARR-based product launch analysis
    
    // Development costs (5% of ARR per year of development)
    const yearlyDevelopmentBudget = businessContext.getProductBudget(5)
    const totalDevelopmentCost = yearlyDevelopmentBudget * (developmentTimeMonths / 12)
    
    // Marketing spend using business context
    const totalMarketingBudget = businessContext.getMarketingBudget(100) // Get full marketing budget
    const marketingSpend = totalMarketingBudget * (marketingIntensity / 100)
    
    // Total investment
    const totalInvestment = totalDevelopmentCost + marketingSpend
    
    // Break-even calculation
    const breakEvenRevenue = totalInvestment * 1.3 // Need 30% margin
    
    // Projected revenue based on adoption
    const marketSize = businessContext.annualRecurringRevenue * 2 // Assume 2x ARR market size
    const projectedRevenue = marketSize * (expectedAdoption / 100) * (0.8 + random() * 0.4)
    
    // ROI calculation
    const projectedROI = totalInvestment > 0 ? ((projectedRevenue - totalInvestment) / totalInvestment) * 100 : 0
    
    return {
      totalDevelopmentCost: round(totalDevelopmentCost),
      marketingSpend: round(marketingSpend),
      breakEvenRevenue: round(breakEvenRevenue),
      projectedROI: round(projectedROI * 10) / 10
    }